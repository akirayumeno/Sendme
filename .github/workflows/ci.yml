name: CI / Backend Tests

on:
  push:
    branches: [ "main", "master" ] # 每次推送到 main 或 master 分支时触发
  pull_request:
    branches: [ "main", "master" ] # 每次创建或更新拉取请求时触发

jobs:
  backend-test:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 虚拟机上运行

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # 检出你的代码

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # 使用你项目所需的 Python 版本

      - name: Start services (DB and Redis)
        # 使用 docker-compose 命令启动数据库和 Redis
        run: docker compose -f docker-compose.yml up -d db redis

      - name: Wait for PostgreSQL to be ready
        # 等待数据库启动并接受连接（非常重要，防止连接失败）
        run: |
          # 尝试连接数据库，直到成功或超时
          docker compose exec db bash -c 'until pg_isready -U postgres; do sleep 1; done'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx # 安装测试工具

      - name: Run Alembic migrations
        # 在运行测试前执行数据库迁移，确保表结构最新
        run: docker compose run --rm backend alembic -c /app/alembic.ini upgrade head

      - name: Run Backend Tests
        # 运行所有的 pytest 测试
        run: pytest
        env:
          # 传递环境变量给测试，比如数据库连接信息 (如果你的测试需要)
          DATABASE_URL: 'postgresql://user:password@db:5432/dbname'

# 如果你有前端测试 (npm test)，可以添加另一个 job:
# frontend-test:
#   ...